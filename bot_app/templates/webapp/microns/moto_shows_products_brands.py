from asgiref.sync import sync_to_async
from telegram import InlineKeyboardButton, InlineKeyboardMarkup
from bot_app.models import Product
from bot_app.templates.webapp.buttons.buttons import create_reply_sklad_btn
from bot_app.templates.webapp.buttons.inline_category_store_btn import show_motorcycle_brands


async def show_products_by_brand(update, context):
    query = update.callback_query
    await query.answer()  # –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–∞–µ–º –ø–æ–ª—É—á–µ–Ω–∏–µ –∫–æ–ª–±—ç–∫–∞

    brand_mapping = {
        "brand_hero": "Hero MotoCorp",
        "brand_bajaj": "Bajaj Moto",
        "brand_tvs": "TVS Motor Company",
        "brand_royal_enfield": "Royal Enfield",
        "brand_ktm": "KTM India"
    }

    brand_name = brand_mapping.get(query.data)

    if brand_name:
        # –ü–æ–ª—É—á–∞–µ–º –ø—Ä–æ–¥—É–∫—Ç—ã –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ
        products = await sync_to_async(Product.objects.filter)(brand__iexact=brand_name)

        if await sync_to_async(products.exists)():  # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –ø—Ä–æ–¥—É–∫—Ç–æ–≤
            product_list = ""
            for product in await sync_to_async(list)(products):  # –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º QuerySet –≤ —Å–ø–∏—Å–æ–∫ –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ
                product_list += (
                    f"<b>–ò–º—è:</b> {product.name}\n"
                    f"<b>–ë—Ä–µ–Ω–¥:</b> {product.brand}\n"
                    f"<b>–ö–∞—Ç–µ–≥–æ—Ä–∏—è:</b> {product.category}\n"
                    f"<b>–¶–µ–Ω–∞:</b> {product.price}‚ÇΩ\n"
                    f"<b>–û–ø–∏—Å–∞–Ω–∏–µ:</b> {product.desc}\n"
                )

                # –°–æ–∑–¥–∞–µ–º –∫–Ω–æ–ø–∫–∏ –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ–º –∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –≤ –∫–æ—Ä–∑–∏–Ω—É
                quantity = 1  # –ó–¥–µ—Å—å –º–æ–∂–Ω–æ –∑–∞–¥–∞—Ç—å –Ω–∞—á–∞–ª—å–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ, –Ω–∞–ø—Ä–∏–º–µ—Ä, 1
                sklad_btn = create_reply_sklad_btn(quantity)

                # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ñ–æ—Ç–æ
                if product.image:  # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
                    with open(product.image.path, 'rb') as photo:
                        # –°–æ–∑–¥–∞–µ–º –∫–Ω–æ–ø–∫—É "–ù–∞–∑–∞–¥ –∫ –±—Ä–µ–Ω–¥–∞–º"
                        back_button = InlineKeyboardButton("üîô –ù–∞–∑–∞–¥ –∫ –±—Ä–µ–Ω–¥–∞–º", callback_data="back_to_brands")
                        back_keyboard = InlineKeyboardMarkup([[back_button]])

                        await context.bot.send_photo(
                            chat_id=query.message.chat.id,
                            photo=photo,
                            caption=product_list,
                            parse_mode='HTML',  # –ò—Å–ø–æ–ª—å–∑—É–µ–º HTML –¥–ª—è —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
                            reply_markup=InlineKeyboardMarkup([
                                [back_button],  # –ö–Ω–æ–ø–∫–∞ –Ω–∞–∑–∞–¥
                                *sklad_btn.inline_keyboard  # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫–∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ–º –∏–∑ sklad_btn
                            ])
                        )
        else:
            await query.message.reply_text(f"–ù–µ—Ç –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –ø—Ä–æ–¥—É–∫—Ç–æ–≤ –¥–ª—è –º–∞—Ä–∫–∏ *{brand_name}*.")
    else:
        await query.message.reply_text("–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π –±—Ä–µ–Ω–¥.")


