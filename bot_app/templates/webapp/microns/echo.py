from telegram import Update
from telegram.ext import CallbackContext

from bot_app.templates.webapp.answers.answer_money import get_currency_rates
from bot_app.templates.webapp.buttons.button_handler import cart
from bot_app.templates.webapp.buttons.buttons import reply_markup_pay, offerta_button, \
    order_calculation_pay, qw_answ_btn_main, track_button, \
    gifts_btn_main, create_reply_sklad_btn
from bot_app.templates.webapp.buttons.buttons_how_working import goa_pay_btn, delivery_btn, warehouse_btn, pays_btn
from bot_app.templates.webapp.buttons.buttons_store import *
from bot_app.templates.webapp.microns.screens import escape_markdown_v2
from bot_app.templates.webapp.microns.send_rabbitmq import send_to_rabbitmq
from bot_app.templates.webapp.parcer import fetch_product_data
from bot_app.templates.webapp.text_files_py_txt.delivery import delivery_info
from bot_app.templates.webapp.text_files_py_txt.warehouse_info import warehouse_info


# –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏–π
async def echo(update: Update, context: CallbackContext) -> None:
    message = update.message.text
    send_to_rabbitmq(message)

    if message == "–¢–æ–≤–∞—Ä—ã –∏–∑ –ò–Ω–¥–∏–∏ üë≥‚Äç‚ôÄÔ∏è":
        await update.message.reply_text('–í—ã –≤—ã–±—Ä–∞–ª–∏ "–¢–æ–≤–∞—Ä—ã –∏–∑ –ò–Ω–¥–∏–∏ üë≥‚Äç‚ôÄÔ∏è".', reply_markup=products_btn_india)
    elif message == "–ö–∞–∫ –º—ã —Ä–∞–±–æ—Ç–∞–µ–º ‚åöÔ∏è":
        await update.message.reply_text('–í—ã –≤—ã–±—Ä–∞–ª–∏ "–ö–∞–∫ –º—ã —Ä–∞–±–æ—Ç–∞–µ–º ‚åöÔ∏è".', reply_markup=how_we_work_btn)
    elif message == "–°–µ—Ä–≤–∏—Å üîß":
        await update.message.reply_text('–í—ã –≤—ã–±—Ä–∞–ª–∏ "–°–µ—Ä–≤–∏—Å üîß".', reply_markup=service_btn)
    elif message == "–û –∫–æ–º–ø–∞–Ω–∏–∏ üè¢":
        await update.message.reply_text('–í—ã –≤—ã–±—Ä–∞–ª–∏ "–û –∫–æ–º–ø–∞–Ω–∏–∏ üè¢".', reply_markup=about_btn)
    elif message == "–ù–∞—à –ë–ª–æ–≥ üìö":
        await update.message.reply_text('–í—ã –≤—ã–±—Ä–∞–ª–∏ "–ù–∞—à –ë–ª–æ–≥ üìö".', reply_markup=blog_btn)
    elif message == "üí≥ –û–ø–ª–∞—Ç–∞":
        await update.message.reply_text('üë≥‚Äç‚ôÇÔ∏è –û–ø–ª–∞—Ç–∞ –∏–Ω–¥–∏–π—Å–∫–∏—Ö —Ç–æ–≤–∞—Ä–æ–≤ –∏ —É—Å–ª—É–≥', reply_markup=goa_pay_btn)
    elif message == "üè™ –°–∫–ª–∞–¥ –í –ò–Ω–¥–∏–∏":
        await update.message.reply_text('–í—ã –ø–µ—Ä–µ—à–ª–∏ –≤ —Ä–∞–∑–¥–µ–ª - üè™ –°–∫–ª–∞–¥ –í –ò–Ω–¥–∏–∏', reply_markup=warehouse_btn)
    elif message == "‚¨ÖÔ∏è –ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é":
        await update.message.reply_text('–í—ã –≤–µ—Ä–Ω—É–ª–∏—Å—å –≤ "–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é üç≥".', reply_markup=main_markup)
    elif message == "‚¨ÖÔ∏è":
        await update.message.reply_text('–í—ã –≤–µ—Ä–Ω—É–ª–∏—Å—å –≤ "–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é üç≥".', reply_markup=main_markup)
    elif message == "‚¨ÖÔ∏è –ù–∞–∑–∞–¥ –∫ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏":
        await update.message.reply_text('–í—ã –≤–µ—Ä–Ω—É–ª–∏—Å—å –≤ "–ö–∞–∫ –º—ã —Ä–∞–±–æ—Ç–∞–µ–º ‚åöÔ∏è".', reply_markup=how_we_work_btn)
    elif message == "‚¨ÖÔ∏è –¢–æ–≤–∞—Ä—ã –∏–∑ –ò–Ω–¥–∏–∏":
        await update.message.reply_text('–í—ã –≤–µ—Ä–Ω—É–ª–∏—Å—å –≤ –¢–æ–≤–∞—Ä—ã –∏–∑ –ò–Ω–¥–∏–∏ üë≥‚Äç‚ôÄÔ∏è', reply_markup=products_btn_india)
    elif message == "–°–ø–æ—Å–æ–±—ã –æ–ø–ª–∞—Ç—ã üèß":
        await update.message.reply_text('üí∞ –û–ø–ª–∞—Ç–∞ –∏–Ω–¥–∏–π—Å–∫–∏—Ö —Ç–æ–≤–∞—Ä–æ–≤ –∏ —É—Å–ª—É–≥ –¥–æ—Å—Ç—É–ø–Ω–∞ —Ç–æ–ª—å–∫–æ –ø–æ –±–µ–∑–Ω–∞–ª–∏—á–Ω–æ–º—É —Ä–∞—Å—á–µ—Ç—É.\n\n'
                                        'üìß –ú—ã –≤—ã—Å—Ç–∞–≤–∏–º —Å—á–µ—Ç –ø–æ —ç–ª–µ–∫—Ç—Ä–æ–Ω–Ω–æ–π –ø–æ—á—Ç–µ.\nüëá üèß –°–ø–æ—Å–æ–±—ã –æ–ø–ª–∞—Ç—ã', reply_markup=reply_markup_pay)
    elif message == "–†–∞—Å—á–µ—Ç –∑–∞–∫–∞–∑–∞ üí∞":
        await update.message.reply_text('üìä –†–∞—Å—á–µ—Ç –∑–∞–∫–∞–∑–∞ –∏–Ω–¥–∏–π—Å–∫–∏—Ö —Ç–æ–≤–∞—Ä–æ–≤.\n\n'
                                        'üìß –ú—ã –≤—ã—Å—Ç–∞–≤–∏–º —Å—á–µ—Ç –ø–æ —ç–ª–µ–∫—Ç—Ä–æ–Ω–Ω–æ–π –ø–æ—á—Ç–µ.\nüëá üßÆ –†–∞—Å—á–µ—Ç –∑–∞–∫–∞–∑–∞', reply_markup=order_calculation_pay)
    elif message == "–ö–∞–∫ –º—ã —Ä–∞–±–æ—Ç–∞–µ–º ‚åõÔ∏èÔ∏è":
        await update.message.reply_text('–í—ã –≤—ã–±—Ä–∞–ª–∏ "–ö–∞–∫ –º—ã —Ä–∞–±–æ—Ç–∞–µ–º ‚åõÔ∏èÔ∏è".', reply_markup=how_we_work_btn)
    elif message == 'üí∏ –ö—É—Ä—Å –≤–∞–ª—é—Ç':
        await get_currency_rates(update, context)
    elif message == "üöö –î–æ—Å—Ç–∞–≤–∫–∞":
        await update.message.reply_text('–í—ã –≤—ã–±—Ä–∞–ª–∏ "üöö –î–æ—Å—Ç–∞–≤–∫–∞".', reply_markup=delivery_btn)
    elif message == "üìù –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –î–æ—Å—Ç–∞–≤–∫–µ":
        await update.message.reply_text(delivery_info, parse_mode='MarkdownV2')
    elif message == "üèó –ö–∞–∫ —Ä–∞–±–æ—Ç–∞–µ—Ç –°–∫–ª–∞–¥":
        await update.message.reply_text(warehouse_info, parse_mode='MarkdownV2')

    elif message == "üõí –ú–æ–∏ –ü–æ–∫—É–ø–∫–∏":
        await update.message.reply_text('–í—ã –ø–µ—Ä–µ—à–ª–∏ –≤ üõí –ú–æ–∏ –ü–æ–∫—É–ø–∫–∏', reply_markup=pays_btn)

    if message == "üóë":
        cart_items = cart.get_cart_items()  # –ü–æ–ª—É—á–∞–µ–º —ç–ª–µ–º–µ–Ω—Ç—ã –∏–∑ –∫–æ—Ä–∑–∏–Ω—ã
        if not cart_items:
            await update.message.reply_text("–í–∞—à–∞ –∫–æ—Ä–∑–∏–Ω–∞ –ø—É—Å—Ç–∞.")
        else:
            # –§–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å —Å–æ–¥–µ—Ä–∂–∏–º—ã–º –∫–æ—Ä–∑–∏–Ω—ã
            purchases_info = "üìå –í–∞—à–∏ –ó–∞–∫–∞–∑—ã:\n\n"
            for product_data, quantity in cart_items.items():
                # –ò–∑–≤–ª–µ–∫–∞–µ–º –¥–∞–Ω–Ω—ã–µ –æ —Ç–æ–≤–∞—Ä–µ
                name = quantity.get('name', '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π —Ç–æ–≤–∞—Ä')
                description = quantity.get('description', '–û–ø–∏—Å–∞–Ω–∏–µ –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç')
                price = quantity.get('price', {})
                current_price = price.get('current', '–¶–µ–Ω–∞ –Ω–µ —É–∫–∞–∑–∞–Ω–∞')
                image_url = quantity.get('image', None)

                # –§–æ—Ä–º–∏—Ä—É–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ç–æ–≤–∞—Ä–µ
                product_info = f"üéÅ –¢–æ–≤–∞—Ä: {name}\n" \
                               f"üî¢ –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ: {product_data}\n" \
                               f"üìù –û–ø–∏—Å–∞–Ω–∏–µ: {description}\n" \
                               f"üí∞ –¶–µ–Ω–∞: {current_price})\n"

                # –î–æ–±–∞–≤–ª—è–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞, –µ—Å–ª–∏ –æ–Ω–æ –µ—Å—Ç—å
                if image_url:
                    product_info += f"\n![–ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞]\n({image_url})"

                # –î–æ–±–∞–≤–ª—è–µ–º —Ç–æ–≤–∞—Ä –≤ —Å–ø–∏—Å–æ–∫ –∑–∞–∫–∞–∑–æ–≤
                purchases_info += f"\n{product_info}\n{'-' * 30}\n"

            # –≠–∫—Ä–∞–Ω–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–µ—Ä–µ–¥ –æ—Ç–ø—Ä–∞–≤–∫–æ–π
            purchases_info = escape_markdown_v2(purchases_info)

            await update.message.reply_text(purchases_info, parse_mode='MarkdownV2')

    elif message == "üó£ –ß–∞–í–æ":
        await update.message.reply_text('‚ÅâÔ∏è –í–æ–ø—Ä–æ—Å-–û—Ç–≤–µ—Ç.\n\n'
                                       'üëá –°–¥–µ–ª–∞–π—Ç–µ –≤—ã–±–æ—Ä —á—Ç–æ –≤–∞—Å –∏–Ω—Ç–µ—Ä–µ—Å—É–µ—Ç.', reply_markup=qw_answ_btn_main)
        # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É –¥–ª—è –ø—É–±–ª–∏—á–Ω–æ–π –æ—Ñ–µ—Ä—Ç—ã
    elif message == "–ü—É–±–ª–∏—á–Ω–∞—è –æ—Ñ–µ—Ä—Ç–∞ üìú":
        await update.message.reply_text("üìé üëá –ù–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ –¥–ª—è –ø–µ—Ä–µ—Ö–æ–¥–∞:", reply_markup=offerta_button)
    elif message == "üëÄ –û—Ç—Å–ª–µ–¥–∏—Ç—å –∑–∞–∫–∞–∑":
        await update.message.reply_text("üìé üëá –ù–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ –¥–ª—è –ø–µ—Ä–µ—Ö–æ–¥–∞:", reply_markup=track_button)
    elif message == "üéÅ –ü–æ–¥–∞—Ä–∫–∏":
        await update.message.reply_text("–í—ã –≤—ã–±—Ä–∞–ª–∏ üéÅ –ü–æ–¥–∞—Ä–∫–∏", reply_markup=gifts_btn_main)
    elif message == "üë§":
        await update.message.reply_text('–í—ã –≤–µ—Ä–Ω—É–ª–∏—Å—å –≤ –∫–∞–±–∏–Ω–µ—Ç üë§', reply_markup=profile_btn)
    elif message == "üîô –ù–∞–∑–∞–¥ –≤ –∫–∞–±–∏–Ω–µ—Ç":
        await update.message.reply_text('–í—ã –≤–µ—Ä–Ω—É–ª–∏—Å—å –≤ –∫–∞–±–∏–Ω–µ—Ç üë§', reply_markup=profile_btn)
        # –ó–∞–ø—Ä–æ—Å —Å—Å—ã–ª–∫–∏ –Ω–∞ —Ç–æ–≤–∞—Ä
    if message == "üìÅ –ö–∞—Ç–∞–ª–æ–≥":
        await update.message.reply_text("üîó –í–≤–µ–¥–∏—Ç–µ —Å—Å—ã–ª–∫—É https:// üëá –Ω–∞ –¢–æ–≤–∞—Ä üõç –º–∞–≥–∞–∑–∏–Ω–∞ üèùGoaBay.com ")

        # –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å—Å—ã–ª–∫–∏ –Ω–∞ —Ç–æ–≤–∞—Ä
    elif message.startswith("http://") or message.startswith("https://"):
        product_data = fetch_product_data(message)

        if "error" in product_data:
            await update.message.reply_text(product_data["error"])
            return


        # –§–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ —Ç–µ–∫—Å—Ç–∞ –æ—Ç–≤–µ—Ç–∞
        reply_text = (
            f"*–ò–º—è:* {product_data.get('name', '–ù–µ –Ω–∞–π–¥–µ–Ω–æ')}\n"
            f"*–û–ø–∏—Å–∞–Ω–∏–µ:* {product_data.get('description', '–ù–µ –Ω–∞–π–¥–µ–Ω–æ')}\n"
            f"*–¶–µ–Ω–∞:* {product_data.get('price', {}).get('current', '–ù–µ —É–∫–∞–∑–∞–Ω–∞')} "
            f"(–¶–µ–Ω–∞ –±–µ–∑ —Å–∫–∏–¥–∫–∏: {product_data.get('price', {}).get('original', '–ù–µ —É–∫–∞–∑–∞–Ω–∞')})\n"
        )

        # –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∏–∑ user_data –∏–ª–∏ —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º 1 –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
        quantity = context.user_data.get("quantity", 1)
        # –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –ø—Ä–æ–¥—É–∫—Ç–∞ –≤ user_data
        context.user_data['product'] = product_data

        # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –∏ –æ—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è —Å –∫–Ω–æ–ø–∫–∞–º–∏
        if 'image' in product_data:
            await update.message.reply_photo(
                photo=product_data['image'],
                caption=reply_text,
                parse_mode="Markdown",
                reply_markup=create_reply_sklad_btn(quantity)  # –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∏–Ω–ª–∞–π–Ω-–∫–Ω–æ–ø–æ–∫
            )
        else:
            await update.message.reply_text(
                reply_text,
                parse_mode="Markdown",
                reply_markup=create_reply_sklad_btn(quantity)  # –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∏–Ω–ª–∞–π–Ω-–∫–Ω–æ–ø–æ–∫
            )


