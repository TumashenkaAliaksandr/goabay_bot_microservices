from bot_app.templates.registrations_store import store_registration_handler
from bot_app.templates.webapp.buttons.buttons import reply_markup_pay, back_button_go, \
    order_calculation_pay, back_button_cal, back_qw_answ_button_main, qw_answ_btn_main, \
    back_gifts_button_main, gifts_btn_main, create_reply_sklad_btn
from bot_app.templates.webapp.cart import Cart
from bot_app.templates.webapp.text_files_py_txt.calculator_info_pay import calculator_info
from bot_app.templates.webapp.text_files_py_txt.info_pay import payment_info
from bot_app.templates.webapp.text_files_py_txt.qwe_answ import qwe_answer_info
from bot_app.templates.webapp.text_files_py_txt.sales_info import sales_info
from telegram import Update
from bot_app.templates.webapp.buttons.buttons_store import *
from telegram.ext import CallbackContext


cart = Cart()


# –û–±—Ä–∞–±–æ—Ç–∫–∞ –∏–Ω–ª–∞–π–Ω-–∫–Ω–æ–ø–æ–∫
async def button_handler(update: Update, context: CallbackContext) -> None:
    query = update.callback_query
    await query.answer()

    # –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–æ–∫ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –∏ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö
    if query.data == 'edit_data':
        await query.edit_message_text("‚úèÔ∏è –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –≤–∞—à–∏ –¥–∞–Ω–Ω—ã–µ —Å–Ω–æ–≤–∞.")
        context.user_data['step'] = None  # –°–±—Ä–æ—Å —à–∞–≥–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏
        await store_registration_handler(update, context)
        return

    elif query.data == 'confirm_data':
        await query.edit_message_text("‚úîÔ∏è –í–∞—à–∏ –¥–∞–Ω–Ω—ã–µ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω—ã!")
        await query.edit_message_text('–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é: üç≥', reply_markup=profile_btn)
        context.user_data.clear()
        return

    payment_method = query.data

    if payment_method in payment_info:
        text, photo_path = payment_info[payment_method]
        with open(photo_path, 'rb') as photo:
            await context.bot.send_photo(
                chat_id=query.message.chat.id,
                photo=photo,
                caption=text,
                parse_mode='MarkdownV2',
                reply_markup=back_button_go  # –ö–Ω–æ–ø–∫–∞ "–ù–∞–∑–∞–¥"
            )
        return

    elif query.data == 'back_pay':
        # –í–æ–∑–≤—Ä–∞—â–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∫ –≤—ã–±–æ—Ä—É —Å–ø–æ—Å–æ–±–∞ –æ–ø–ª–∞—Ç—ã
        await query.message.reply_text("üí∞ –û–ø–ª–∞—Ç–∞ –∏–Ω–¥–∏–π—Å–∫–∏—Ö —Ç–æ–≤–∞—Ä–æ–≤ –∏ —É—Å–ª—É–≥ –¥–æ—Å—Ç—É–ø–Ω–∞ —Ç–æ–ª—å–∫–æ –ø–æ –±–µ–∑–Ω–∞–ª–∏—á–Ω–æ–º—É —Ä–∞—Å—á–µ—Ç—É.\n\n"
                                       "üìß –ú—ã –≤—ã—Å—Ç–∞–≤–∏–º —Å—á–µ—Ç –ø–æ —ç–ª–µ–∫—Ç—Ä–æ–Ω–Ω–æ–π –ø–æ—á—Ç–µ.\nüëá üèß C–ø–æ—Å–æ–±—ã –æ–ø–ª–∞—Ç—ã:", reply_markup=reply_markup_pay)
        return

    # –∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä –º–µ—Ç–æ–¥—ã
    calculator_method = query.data

    if calculator_method in calculator_info:
        text, photo_path = calculator_info[calculator_method]
        with open(photo_path, 'rb') as photo:
            await context.bot.send_photo(
                chat_id=query.message.chat.id,
                photo=photo,
                caption=text,
                parse_mode='MarkdownV2',
                reply_markup=back_button_cal  # –ö–Ω–æ–ø–∫–∞ "–ù–∞–∑–∞–¥"
            )
        return

    elif query.data == 'back_calculator':
        # –í–æ–∑–≤—Ä–∞—â–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∫ –≤—ã–±–æ—Ä—É —à–∞–≥–æ–≤ –∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä–∞
        await query.message.reply_text('üìä –†–∞—Å—á–µ—Ç –∑–∞–∫–∞–∑–∞ –∏–Ω–¥–∏–π—Å–∫–∏—Ö —Ç–æ–≤–∞—Ä–æ–≤.\n\n'
                                        'üìß –ú—ã –≤—ã—Å—Ç–∞–≤–∏–º —Å—á–µ—Ç –ø–æ —ç–ª–µ–∫—Ç—Ä–æ–Ω–Ω–æ–π –ø–æ—á—Ç–µ.\nüëá üßÆ –†–∞—Å—á–µ—Ç –∑–∞–∫–∞–∑–∞',
                                        reply_markup=order_calculation_pay)
        return

    # –≤–æ–ø—Ä–æ—Å –æ—Ç–≤–µ—Ç
    qwe_answer_method = query.data

    if qwe_answer_method in qwe_answer_info:
        text, photo_path = qwe_answer_info[qwe_answer_method]
        with open(photo_path, 'rb') as photo:
            await context.bot.send_photo(
                chat_id=query.message.chat.id,
                photo=photo,
                caption=text,
                parse_mode='MarkdownV2',
                reply_markup=back_qw_answ_button_main # –ö–Ω–æ–ø–∫–∞ "–ù–∞–∑–∞–¥"
            )
        return

    elif query.data == 'back_qwe_answer':
        # –í–æ–∑–≤—Ä–∞—â–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∫ –≤—ã–±–æ—Ä—É —à–∞–≥–æ–≤ –∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä–∞
        await query.message.reply_text('‚ÅâÔ∏è –í–æ–ø—Ä–æ—Å-–û—Ç–≤–µ—Ç.\n\n'
                                       'üëá –°–¥–µ–ª–∞–π—Ç–µ –≤—ã–±–æ—Ä —á—Ç–æ –≤–∞—Å –∏–Ω—Ç–µ—Ä–µ—Å—É–µ—Ç.',
                                       reply_markup=qw_answ_btn_main)
        return

        # –ê–∫—Ü–∏–∏
    gifts_method = query.data

    if gifts_method in sales_info:
        print(sales_info[gifts_method])
        text, photo_path = sales_info[gifts_method]
        with open(photo_path, 'rb') as photo:
            await context.bot.send_photo(
                chat_id=query.message.chat.id,
                photo=photo,
                caption=text,
                parse_mode='MarkdownV2',
                reply_markup=back_gifts_button_main  # –ö–Ω–æ–ø–∫–∞ "–ù–∞–∑–∞–¥"
            )
        return

    elif query.data == 'back_gifts':
        # –í–æ–∑–≤—Ä–∞—â–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∫ –≤—ã–±–æ—Ä—É üéÅ –ü–æ–¥–∞—Ä–∫–∏
        await query.message.reply_text('üéÅ –ü–æ–¥–∞—Ä–∫–∏\n\n'
                                       'üëá –°–¥–µ–ª–∞–π—Ç–µ –≤—ã–±–æ—Ä —á—Ç–æ –≤–∞—Å –∏–Ω—Ç–µ—Ä–µ—Å—É–µ—Ç.',
                                       reply_markup=gifts_btn_main)
        return

    else:
        error_message = "ü§∑‚Äç‚ôÇÔ∏è –ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π –≤—ã–±–æ—Ä. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞."
        try:
            await query.edit_message_text(error_message)
        except Exception as e:
            print(f"Error editing message: {e}")  # –õ–æ–≥–∏—Ä—É–µ–º –æ—à–∏–±–∫—É


    # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞, –µ—Å–ª–∏ –µ–≥–æ –Ω–µ—Ç –≤ user_data
    if "quantity" not in context.user_data:
        context.user_data["quantity"] = 1

    # # –ü–æ–ª—É—á–µ–Ω–∏–µ —Ç–µ–∫—É—â–µ–≥–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞
    # quantity = context.user_data["quantity"]

    # –û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–∞–∂–∞—Ç–∏—è –∫–Ω–æ–ø–æ–∫
    if query.data == "add_to_cart":
        # –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ —Ç–æ–≤–∞—Ä–∞ –∏ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ
        product_id = context.user_data.get("product_id")  # –ü–æ–ª—É—á–∞–µ–º product_id –∏–∑ user_data
        quantity = context.user_data.get("quantity", 1)  # –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é 1)
        product_data = context.user_data.get("product")  # –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –æ —Ç–æ–≤–∞—Ä–µ

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –¥–∞–Ω–Ω—ã–µ –æ —Ç–æ–≤–∞—Ä–µ —Å—É—â–µ—Å—Ç–≤—É—é—Ç
        if not product_data:
            await query.answer("–û—à–∏–±–∫–∞: –Ω–µ –Ω–∞–π–¥–µ–Ω —Ç–æ–≤–∞—Ä. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.")
            return

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –Ω–∞–∑–≤–∞–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞ –µ—Å—Ç—å –≤ –¥–∞–Ω–Ω—ã—Ö
        product_name = product_data.get("name")
        if not product_name:
            await query.answer("–û—à–∏–±–∫–∞: —É —Ç–æ–≤–∞—Ä–∞ –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –Ω–∞–∑–≤–∞–Ω–∏–µ.")
            return

        # –î–æ–±–∞–≤–ª—è–µ–º —Ç–æ–≤–∞—Ä –≤ –∫–æ—Ä–∑–∏–Ω—É
        cart.add_item(quantity, product_data)

        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –≤—Å–ø–ª—ã–≤–∞—é—â–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ –≤ –∫–æ—Ä–∑–∏–Ω—É
        await query.answer(f"–¢–æ–≤–∞—Ä '{product_name}' –¥–æ–±–∞–≤–ª–µ–Ω –≤ –∫–æ—Ä–∑–∏–Ω—É: {quantity} —à—Ç.")

    elif query.data == "increase_quantity":
        context.user_data["quantity"] += 1
        if query.message:  # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
            try:
                await query.edit_message_reply_markup(
                    reply_markup=create_reply_sklad_btn(context.user_data["quantity"]))
            except Exception as e:
                print(f"Error editing message: {e}")  # –õ–æ–≥–∏—Ä—É–µ–º –æ—à–∏–±–∫—É, –µ—Å–ª–∏ –æ–Ω–∞ –≤–æ–∑–Ω–∏–∫–ª–∞

    elif query.data == "decrease_quantity":
        if context.user_data["quantity"] > 1:  # –ß—Ç–æ–±—ã –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –Ω–µ —Å—Ç–∞–Ω–æ–≤–∏–ª–æ—Å—å –º–µ–Ω—å—à–µ 1
            context.user_data["quantity"] -= 1
            if query.message:  # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
                try:
                    await query.edit_message_reply_markup(
                        reply_markup=create_reply_sklad_btn(context.user_data["quantity"]))
                except Exception as e:
                    print(f"Error editing message: {e}")  # –õ–æ–≥–∏—Ä—É–µ–º –æ—à–∏–±–∫—É, –µ—Å–ª–∏ –æ–Ω–∞ –≤–æ–∑–Ω–∏–∫–ª–∞

    # –ú–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –ª–æ–≥ –¥–ª—è —Ç–µ–∫—É—â–µ–≥–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞, –µ—Å–ª–∏ –Ω—É–∂–Ω–æ
    print(context.user_data["quantity"])
    